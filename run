#! /bin/bash
#
#

CONTAINER="[scitran/afq_pipeline]"
echo -e "$CONTAINER  Initiated"


###############################################################################
# Built to flywheel-v0 spec.
FLYWHEEL_BASE=/flywheel/v0
OUTPUT_DIR=$FLYWHEEL_BASE/output
INPUT_DIR=$FLYWHEEL_BASE/input


################################################################################
# CONFIGURE ENV

source ${FLYWHEEL_BASE}/docker-env.sh


################################################################################
# Use the SDK to download the data

${FLYWHEEL_BASE}/fw_sdk_getData.py
exit_status=$?

if [[ $exit_status != 0 ]]; then
  echo "$CONTAINER  Failure during FW SDK download. Exiting!"
  exit $exit_status
fi


###############################################################################
# Built to flywheel-v0 spec.

${FLYWHEEL_BASE}/run_fslmerge
exit_status=$?

if [[ $exit_status != 0 ]]; then
  echo "$CONTAINER  MERGE failure!"
  exit $exit_status
fi


###############################################################################
# DTIINIT

# Make DTI_INIT DIRECTORIES
NIFTI_DIR=$INPUT_DIR/dwi
BVEC_DIR=$INPUT_DIR/bvec
BVAL_DIR=$INPUT_DIR/bval

mkdir "$NIFTI_DIR" && cp "$OUTPUT_DIR"/*.nii* "$NIFTI_DIR"
mkdir "$BVEC_DIR"  && cp "$OUTPUT_DIR"/*.bvec* "$BVEC_DIR"
mkdir "$BVAL_DIR"  && cp "$OUTPUT_DIR"/*.bval* "$BVAL_DIR"

${FLYWHEEL_BASE}/run_dtiinit
exit_status=$?

if [[ $exit_status != 0 ]]; then
  echo "$CONTAINER  DTIINIT failure!"
  exit $exit_status
fi


###############################################################################
# AFQ

# Make AFQ DIRECTORY
ZIP_DIR=$INPUT_DIR/dtiInit_Archive

mkdir "$ZIP_DIR" && cp "$OUTPUT_DIR"/*.zip "$ZIP_DIR"

${FLYWHEEL_BASE}/run_afq
exit_status=$?

if [[ $exit_status != 0 ]]; then
  echo "$CONTAINER  AFQ failure!"
  exit $exit_status
fi

exit 0
